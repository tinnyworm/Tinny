#! /usr/bin/perl -w

#---------------------------------------------
# $risk_table{key1}{key2}[num_bads][num_tot]
#                         ^^^       ^^^
#                         0         1
#---------------------------------------------

my %risk_table = ();

#---------------------------------------------
# input file:
# field_1    field_2    tag
# ...
#---------------------------------------------

my $tot_bads = 0;
my $tot = 0;

while ( <> ) {

    chomp;
    my @data = split /\t/;

    my $f1 = $data[0];
    my $f2 = $data[1];
    my $tg = $data[2];

    $risk_table{ $f1 }{ $f2 }[0]++ if $tg =~ /[YyFf1]/;
    $risk_table{ $f1 }{ $f2 }[1]++;

    $tot_bads++ if $tg =~ /[YyFf1]/;
    $tot++;

}

#-----------------------------------------------------------------------------------------------------------------------------------------
# output file:
# field_1    field_2    num_bads    num_tots    risk_raw    adjusted_risk_50    adjusted_risk_100    adjusted_risk_150    adjusted_risk_200
# ...
#-----------------------------------------------------------------------------------------------------------------------------------------

my $default_rate = $tot_bads / $tot;

print "col1\tcol2\t#bads\t#tots\trisk_raw\trisk_50\trisk_100\trisk_150\trisk_200\n";

foreach $key_1 ( keys %risk_table ) {

    foreach $key_2 ( keys %{ $risk_table{$key_1} } ) {

	defined $risk_table{$key_1}{$key_2}[0] or $risk_table{$key_1}{$key_2}[0] = 0;
	defined $risk_table{$key_1}{$key_2}[1] or $risk_table{$key_1}{$key_2}[1] = 0;

	my $num_bads = $risk_table{$key_1}{$key_2}[0];
	my $num_tots = $risk_table{$key_1}{$key_2}[1];

	my $risk_raw  = $num_bads / $num_tots;
	my $risk_50   = ($num_bads + 50  * $default_rate) / ($num_tots + 50  * $default_rate);
	my $risk_100  = ($num_bads + 100 * $default_rate) / ($num_tots + 100 * $default_rate);
	my $risk_150  = ($num_bads + 150 * $default_rate) / ($num_tots + 150 * $default_rate);
	my $risk_200  = ($num_bads + 200 * $default_rate) / ($num_tots + 200 * $default_rate);

	print $key_1, "\t", $key_2, "\t", $num_bads, "\t", $num_tots, "\t";
	printf "%2.6f\t%2.6f\t%2.6f\t%2.6f\t%2.6f\n", $risk_raw, $risk_50, $risk_100, $risk_150, $risk_200;

    }

}

print "Default bad rate: $default_rate\n";
