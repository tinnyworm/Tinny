##################################################################################
# Makefile for all the steps 
#
# This script using data for generating the relative plots and tables
#
# It can (and usually should) be run in parallel using
#		make -j<njobs> -l<maxload> [-f <Makefile of interest>]
#			njobs: Allow N jobs at once; infinite jobs with no arg.
#			maxload: Don't start multiple jobs unless load is below N.
# See the help of make for detail information (using make --help)
# 
# 
# The changes should be made between >>> and <<< in general
# yxc on 1/2005
##################################################################################

SHELL = /bin/sh

#>>>>>> change start from here >>>>>>

DATA = 0501   \
0502   \
0503 \
0504 \
0505 \
0506 \
0507

## Working directory

WORK_DIR = /work/aisle03/yxc/SBSA/200501_200507_10pct
#>>>>>> change ends from here >>>>>>

SAMP = /home/yxc/scripts/Script/discsample.sh
CMRG  = /home/yxc/scripts/Script/col_merge.sh
CHECK = /home/yxc/check/check_all
ADDM  = /home/yxc/scripts/Script/add_more.sh

RESSC = $(foreach a, ${DATA}, ${WORK_DIR}/log/${a}.sample.card.log) 
RESSA = $(foreach a, ${DATA}, ${WORK_DIR}/log/${a}.sample.auth.log) 
RESST = $(foreach a, ${DATA}, ${WORK_DIR}/log/${a}.sample.post.log)
RESSP = $(foreach a, ${DATA}, ${WORK_DIR}/log/${a}.sample.pay.log)
RESSN = $(foreach a, ${DATA}, ${WORK_DIR}/log/${a}.sample.nonm.log)
COLMERGE = ${WORK_DIR}/log/col_merge.log
CHECKALL = ${WORK_DIR}/log/check_all.log
ADDMORE  = ${WORK_DIR}/log/add_more.log


DIR = ${WORK_DIR}/log

## rules
all :  ${DIR} ${RESSA} ${RESSC} ${RESST} ${RESSP} ${RESSN} ${COLMERGE} ${CHECKALL} ${ADDMORE}

${DIR}:
	test -d ${WORK_DIR}/datas || mkdir ${WORK_DIR}/datas ;\
	test -d ${WORK_DIR}/stats || mkdir ${WORK_DIR}/stats ;\
	test -d ${WORK_DIR}/merge || mkdir ${WORK_DIR}/merge ;\
	test -d ${WORK_DIR}/log || mkdir ${WORK_DIR}/log ;


${WORK_DIR}/log/%.sample.card.log: ${DIR}
	cd ${WORK_DIR};\
	${SAMP} ${WORK_DIR}/merge/frauds.dat.gz ${WORK_DIR}/filelist/$*.card.filelist CARDS 10 > ${WORK_DIR}/log/$*.sample.card.log 2>&1 ; 

${WORK_DIR}/log/%.sample.auth.log: ${DIR}
	cd ${WORK_DIR};\
	${SAMP} ${WORK_DIR}/merge/frauds.dat.gz ${WORK_DIR}/filelist/$*.auth.filelist AUTHS 10> ${WORK_DIR}/log/$*.sample.auth.log 2>&1 ; 

${WORK_DIR}/log/%.sample.post.log: ${DIR}
	cd ${WORK_DIR};\
	${SAMP} ${WORK_DIR}/merge/frauds.dat.gz ${WORK_DIR}/filelist/$*.post.filelist POSTS 10 > ${WORK_DIR}/log/$*.sample.post.log 2>&1 ; 

${WORK_DIR}/log/%.sample.pay.log: ${DIR}
	cd ${WORK_DIR};
	${SAMP} ${WORK_DIR}/merge/frauds.dat.gz ${WORK_DIR}/filelist/$*.pay.filelist PAY 10 > ${WORK_DIR}/log/$*.sample.pay.log 2>&1 ; 

${WORK_DIR}/log/%.sample.nonm.log: ${DIR}
	cd ${WORK_DIR};\
	${SAMP} ${WORK_DIR}/merge/frauds.dat.gz ${WORK_DIR}/filelist/$*.nonm.filelist NONM 10 >	${WORK_DIR}/log/$*.sample.nonm.log 2>&1 ; 


${WORK_DIR}/log/%merge.log: ${RESSA} ${RESSC}
	${CMRG} -c -a -t -p -n >${WORK_DIR}/log/$*merge.log 2>&1;
  
${WORK_DIR}/log/%all.log: ${RESSA} ${RESSC} ${COLMERGE}
	cd ${WORK_DIR}/merge; \	
	${CHECK} -c ${WORK_DIR}/merge/cards.dat.gz -a ${WORK_DIR}/merge/auths.dat.gz -t  ${WORK_DIR}/merge/posts.dat.gz -f 
${WORK_DIR}/merge/frauds.dat.gz >${WORK_DIR}/log/$*all.log 2>&1;

${ADDMORE}: ${RESSA} ${RESSC} ${COLMERGE}
	cd ${WORK_DIR}/merge; \
	${ADDM} -c cards.dat.gz -a auths.dat.gz -f frauds.dat.gz -t posts.dat.gz >${WORK_DIR}/log/add_more.log 2>&1;
