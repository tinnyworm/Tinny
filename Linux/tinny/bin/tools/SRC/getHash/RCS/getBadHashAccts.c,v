head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	98.05.12.17.46.29;	author dkg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define ACCT_LEN 19
#define BUFF_SIZE 1000

int hashValue(char*);

/******************************************************************************/

int main(int argc, char* argv[]){
   char buff[BUFF_SIZE];
   char acct[ACCT_LEN+1];
   int threshold=100;
   
   if (argc == 2) threshold=atoi(argv[1]);

   while (fgets(buff,BUFF_SIZE,stdin) != NULL){
      strncpy(acct,buff,ACCT_LEN);
      acct[ACCT_LEN]='\0';

      if (hashValue(acct) >= threshold)
         fprintf(stdout, "%s\n", acct);
   }
   return 0;
}

/******************************************************************************/

int hashValue(char* acctNum){
   int coprime[] = {33,47,53,17,27,41};
   int i, j, k, sum=0;

   for (i=ACCT_LEN-1; !isalnum(acctNum[i]); i--);

   if (i<12){
      fprintf(stderr,
              "Account number found of length only %d in hashValue!\n", i+1);
       return(-1);
   }

   for (k=0, j=i-12; k<6; i--, j++, k++)
      sum += (((acctNum[j] - '0') * 10) + (acctNum[i] - '0')) * coprime[k];

   return(sum%100);
}
/******************************************************************************/
@
