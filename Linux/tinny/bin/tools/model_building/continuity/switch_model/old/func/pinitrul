//
//************************************************
// Profile Init rules
//************************************************
//
RULE PINIT;
VAR
    TranAmt : NUMERIC;

BEGIN

  /* 1/6/99  jcb  if tran type is not auth, nonmon, post, 
  /* or payment, error out */
  IF ( NOT (TRAN.AUTH_POST_FLAG IN ("A", "N", "P", "Q")) ) THEN
    TERMINATE(FAIL + MODEL_ID + NOT_AUTH);

  /* Check transaction specific date/time information for all
  /* acceptable tran types */
  IF ( NOT(Valid_Date(TRAN.TRAN_DATE)) ) THEN
    TERMINATE(FAIL + MODEL_ID + BAD_TRAN_DATE);

  /* 1/6/99  jcb  if tran is auth, make sure it is a valid
  /* transaction to initialize the profile*/
  IF ( TRAN.AUTH_POST_FLAG = 'A' ) THEN
    BEGIN
      IF NOT(Valid_Time(TRAN.TRAN_TIME)) THEN
        TERMINATE(FAIL + MODEL_ID + BAD_TRAN_TIME);

      IF ( TRAN.TRAN_CURR_CODE = "840" ) THEN
        TranAmt := TRAN.TRAN_AMOUNT;
      ELSE IF ( TRAN.TRAN_CURR_CODE = "   " ) THEN
        TranAmt := TRAN.TRAN_AMOUNT  * CONV_TO_DOLLARS;
      ELSE IF ( TRAN.TRAN_CURR_CODE = "124" ) THEN
        BEGIN
          IF ( (Valid_Amount(TRAN.TRAN_CURR_CONV) ) AND
               (TRAN.TRAN_CURR_CONV > 0.0) AND
               (TRAN.TRAN_CURR_CONV < 0.999) ) THEN
            TranAmt := TRAN.TRAN_AMOUNT * TRAN.TRAN_CURR_CONV;
          ELSE
            TranAmt := TRAN.TRAN_AMOUNT  * 0.67;
        END;
      ELSE IF ( (Valid_Amount(TRAN.TRAN_CURR_CONV)) AND
               (TRAN.TRAN_CURR_CONV > 0.0) ) THEN
        TranAmt := TRAN.TRAN_AMOUNT * TRAN.TRAN_CURR_CONV;
      ELSE
        TranAmt := TRAN.TRAN_AMOUNT  * CONV_TO_DOLLARS;

      /* Make sure the transaction amount is valid */
      IF ( NOT(Valid_Amount(TRAN.TRAN_AMOUNT)) OR
           TranAmt > MAX_AMOUNT OR
           TranAmt <= 0.0 ) THEN
        TERMINATE(FAIL + MODEL_ID + BAD_TRAN_AMOUNT);

      /* Make sure the SIC code is valid */
      IF ( NOT Is_Int_String(TRAN.MERCH_CAT) ) THEN
        TERMINATE(FAIL + MODEL_ID + BAD_SIC_CODE);
    END;

  Prof_Init();

  CALCVARS(GLB);
  CALCVARS(INP);

  IF ( (CURRENT_DATE - CARD_OPNDATE_98S) > 90.0 ) THEN
      START_DATE_98S := CURRENT_DATE - 90.0;
  ELSE
      START_DATE_98S := CARD_OPNDATE_98S;


  AUTH_RECENT_UPDATE_DATE := START_DATE_98S;
  AUTH_RECENT_UPDATE_TIME := 0.0;

  RECENT_CREDIT_LIMIT  :=  CARD_CREDIT_LIMIT;

  PROF.MATR_DATE := 1;
  PROF_INIT := PROF_INIT_VALUE;

ENDRULE;
